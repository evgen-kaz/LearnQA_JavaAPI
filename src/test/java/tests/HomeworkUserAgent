import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import org.junit.jupiter.params.provider.Arguments;

import java.util.stream.Stream;

import java.util.Arrays;
import java.util.List;

public class HomeworkUserAgent {
    List<ExpectedResultUserAgent> expectedResults = Arrays.asList(
            new ExpectedResultUserAgent("Mobile", "No", "Android"),
            new ExpectedResultUserAgent("Mobile", "Chrome", "iOS"),
            new ExpectedResultUserAgent("Googlebot", "Unknown", "Unknown"),
            new ExpectedResultUserAgent("Web", "Chrome", "No"),
            new ExpectedResultUserAgent("Mobile", "No", "iPhone"));

    static Stream<Arguments> userAgentWithIndex() {
        return Stream.of(
                Arguments.of("Mozilla/5.0 (Linux; U; Android 4.0.2; en-us; Galaxy Nexus Build/ICL53F) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30", 0),
                Arguments.of("Mozilla/5.0 (iPad; CPU OS 13_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/91.0.4472.77 Mobile/15E148 Safari/604.1", 1),
                Arguments.of("Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html", 2),
                Arguments.of("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36 Edg/91.0.100.0", 3),
                Arguments.of("Mozilla/5.0 (iPad; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1", 4)
        );
    }

    @ParameterizedTest
    @MethodSource("userAgentWithIndex")
    public void testUserAgent(String userAgent, int index) {
        ExpectedResultUserAgent expected = expectedResults.get(index);

        JsonPath response = RestAssured
                .given()
                .header("User-Agent", userAgent)
                .when()
                .get("https://playground.learnqa.ru/ajax/api/user_agent_check")
                .jsonPath();
        //response.prettyPrint();


        String actualPlatform = response.getString("platform");
        String actualBrowser = response.getString("browser");
        String actualDevice = response.getString("device");


        if (expected.platform.equals(actualPlatform)) {

        } else {
            System.out.println("Для User-Agent: '" + userAgent + "' ожидалась платформа '" + expected.platform + "', но получена '" + actualPlatform + "'");
        }

        if (expected.browser.equals(actualBrowser)) {

        } else {
            System.out.println("Для User-Agent: '" + userAgent + "' ожидался браузер '" + expected.browser + "', но получен '" + actualBrowser + "'");
        }

        if (expected.device.equals(actualDevice)) {

        } else {
            System.out.println("Для User-Agent: '" + userAgent + "' ожидалось устройство '" + expected.device + "', но получено '" + actualDevice + "'");
        }
    }
}
